{"version":3,"sources":["components/Home.jsx","components/CharacterButton.jsx","components/utils.js","components/CreateRoom.jsx","components/GameRoom.jsx","components/App.jsx","index.js"],"names":["JoinRoom","props","onChangeRoomID","evt","setState","roomid","target","value","render","className","InputGroup","size","Prepend","Text","id","FormControl","aria-label","aria-describedby","state","onChange","to","pathname","Button","disabled","React","Component","HomePage","Container","Jumbotron","CharacterButton","handleChange","isNaN","setCharNumber","name","onClickAdd","number","onClickDeduct","Col","md","span","offset","this","variant","cname","onClick","type","Append","checkStatus","response","status","error","Error","statusText","console","log","parseJSON","json","checkValid","characters","board","key","CreateRoom","prevState","parseInt","players","obj","sum","el","hasOwnProperty","parseFloat","validateRoom","boards","isValidRoom","onClickCreateRoom","fetch","method","headers","mode","body","JSON","stringify","time","then","res","data","hasResult","catch","err","onClickSetBoard","character","existingBoards","Object","keys","map","listItems","entries","charactersMapping","i","roomStr","accept","forEach","PlayerPosition","setPlayerName","GameRoom","componentDidMount","match","params","valid","numPlayers","boardstr","k","panel","push","Row","Array","fill","App","exact","path","component","rooms","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bc490dab.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nclass JoinRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomid: \"\",\n    };\n  }\n\n  onChangeRoomID = (evt) => {\n    this.setState({ roomid: evt.target.value });\n  };\n\n  render = () => {\n    return (\n      <div className=\"text-center\">\n        <InputGroup size=\"lg\" className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">房間ID</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            aria-label=\"Small\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            value={this.state.roomid}\n            onChange={this.onChangeRoomID}\n          />\n          <Link to={{ pathname: `/room/${this.state.roomid}` }}>\n            <Button size=\"lg\" disabled={!this.state.roomid}>\n              加入房間\n            </Button>\n          </Link>\n        </InputGroup>\n      </div>\n    );\n  };\n}\n\nconst HomePage = () => {\n  return (\n    <Container className=\"p-3\">\n      <Jumbotron>\n        <h1 className=\"header\">狼人殺面殺助手v1</h1>\n\n        <div className=\"text-center\">\n          <Link to=\"/createroom\">\n            <Button size=\"lg\">創建房間</Button>\n          </Link>\n        </div>\n        <JoinRoom />\n      </Jumbotron>\n    </Container>\n  );\n};\nexport default HomePage;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class CharacterButton extends React.Component {\n  handleChange = (evt) => {\n    const value = evt.target.value;\n    if (!isNaN(value) && value > 0) {\n      this.props.setCharNumber(this.props.name, value);\n    }\n  };\n\n  onClickAdd = () => {\n    this.props.setCharNumber(this.props.name, this.props.number + 1);\n  };\n\n  onClickDeduct = () => {\n    this.props.setCharNumber(this.props.name, this.props.number - 1);\n  };\n\n  render() {\n    return (\n      <Col md={{ span: 3, offset: 4 }}>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            {this.props.number > 0 ? (\n              <Button disabled={true} variant=\"secondary\">{this.props.cname}</Button>\n            ) : (\n              <Button disabled={true} variant=\"outline-secondary\">\n                {this.props.cname}\n              </Button>\n            )}\n            <Button onClick={this.onClickDeduct} disabled={this.props.number === 0}> - </Button>\n          </InputGroup.Prepend>\n          <FormControl\n            aria-label=\"Small\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            type=\"number\"\n            value={this.props.number}\n            onChange={this.handleChange}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.onClickAdd}> + </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Col>\n    );\n  }\n}\n","function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(`HTTP Error ${response.statusText}`);\n  error.status = response.statusText;\n  error.response = response;\n  console.log(error); // eslint-disable-line no-console\n  throw error;\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nexport { parseJSON, checkStatus };\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\n\nimport CharacterButton from \"./CharacterButton.jsx\";\nimport { parseJSON, checkStatus } from \"./utils\";\n\nfunction sum(obj) {\n  var sum = 0;\n  for (var el in obj) {\n    if (obj.hasOwnProperty(el)) {\n      sum += parseFloat(obj[el]);\n    }\n  }\n  return sum;\n}\n\nfunction checkValid(characters, board) {\n  for (const key in characters) {\n    if (key in board) {\n      if (characters[key] !== board[key]) {\n        return false;\n      }\n    } else if (characters[key] !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default class CreateRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValidRoom: false, // if current setup is valid or not\n      roomid: \"\",\n      time: 120,\n      players: 0,\n      characters: {},\n      charactersMapping: {},\n      boards: {},\n      hasResult: false, // if the result is returned or not\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/api/characters`, {\n      method: \"GET\",\n      accept: \"application: json\",\n      mode: \"cors\",\n    })\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((data) => {\n        let characters = {};\n        Object.keys(data).forEach((key) => {\n          characters[key] = 0;\n        });\n        this.setState({ characters: characters, charactersMapping: data });\n      })\n      .catch((err) => {\n        console.log(\"Fetch character error \" + err);\n      });\n\n    fetch(`/api/boards`, {\n      method: \"GET\",\n      accept: \"application: json\",\n      mode: \"cors\",\n    })\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((data) => {\n        this.setState({ boards: data });\n      })\n      .catch((err) => {\n        console.log(\"Fetch character error \" + err);\n      });\n  }\n\n  setCharNumber = (name, value) => {\n    this.setState(\n      (prevState) => {\n        let characters = prevState.characters;\n        characters[name] = parseInt(value);\n        const players = sum(characters);\n        return { characters: characters, players: players };\n      },\n      () => this.validateRoom()\n    );\n  };\n\n  validateRoom = () => {\n    for (const key in this.state.boards) {\n      if (checkValid(this.state.characters, this.state.boards[key])) {\n        this.setState({ isValidRoom: true });\n        console.log(\"Found equal room!\");\n        break;\n      }\n    }\n  };\n\n  onClickCreateRoom = () => {\n    fetch(`/api/room`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      mode: \"cors\",\n      body: JSON.stringify({\n        time: this.state.time,\n        players: this.state.players,\n        characters: this.state.characters,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        this.setState({\n          hasResult: true,\n          roomid: data[\"roomid\"],\n        });\n      })\n      .catch((err) => {\n        console.err(err);\n      });\n  };\n\n  onClickSetBoard = (key) => {\n    const board = this.state.boards[key];\n    let characters = this.state.characters;\n    for (const character in characters) {\n      if (character in board) {\n        characters[character] = board[character];\n      } else {\n        characters[character] = 0;\n      }\n    }\n    this.setState({ characters: characters, isValidRoom: true });\n  };\n\n  render = () => {\n    let existingBoards = Object.keys(this.state.boards).map((key) => (\n      <Button\n        key={key}\n        className=\"mr-1 mb-1\"\n        size=\"md\"\n        variant=\"outline-info\"\n        onClick={() => {\n          this.onClickSetBoard(key);\n        }}\n      >\n        {key}\n      </Button>\n    ));\n    let listItems = Object.entries(\n      this.state.charactersMapping\n    ).map(([key, value], i) => (\n      <CharacterButton\n        key={i}\n        cname={value}\n        name={key}\n        number={this.state.characters[key]}\n        setCharNumber={this.setCharNumber}\n      />\n    ));\n    let roomStr = \"/room/\" + this.state.roomid;\n    return (\n      <Container className=\"p-3\">\n        <div className=\"text-center\">\n          {existingBoards}\n          {listItems}\n          <Button\n            size=\"lg\"\n            disabled={!this.state.isValidRoom}\n            onClick={this.onClickCreateRoom}\n          >\n            創造房間\n          </Button>\n          {this.state.isValidRoom ? null : <div>房間不符合已存在的板子。</div>}\n          {this.state.hasResult ? (\n            <Link to={roomStr}>\n              <Button size=\"lg\">進入房間 {this.state.roomid} </Button>\n            </Link>\n          ) : null}\n        </div>\n      </Container>\n    );\n  };\n}\n","import React from \"react\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { parseJSON, checkStatus } from \"./utils\";\n\nfunction PlayerPosition(props) {\n  let handleChange = (evt) => {\n    const value = evt.target.value;\n    props.setPlayerName(props.number, value);\n  };\n\n  return (\n    <Col>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text>{props.number + 1}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          aria-label=\"Small\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n          value={props.name}\n          onChange={handleChange}\n        />\n      </InputGroup>\n    </Col>\n  );\n}\n\nexport default class GameRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valid: false,\n      players: Array(12).fill(\"你的名字\"),\n      numPlayers: 0,\n      characters: {},\n      charactersMapping: {},\n    };\n  }\n\n  componentDidMount = () => {\n    fetch(`/api/room?roomid=${this.props.match.params.roomid}`, {\n      method: \"GET\",\n      accept: \"application: json\",\n      mode: \"cors\",\n    })\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((data) => {\n        console.log(data);\n        this.setState({\n          valid: true,\n          numPlayers: data[\"players\"],\n          characters: data[\"characters\"],\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error \" + err);\n      });\n\n    fetch(`/api/characters`, {\n      method: \"GET\",\n      accept: \"application: json\",\n      mode: \"cors\",\n    })\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((data) => {\n        this.setState({ charactersMapping: data });\n      })\n      .catch((err) => {\n        console.log(\"Fetch character error \" + err);\n      });\n  };\n\n  setPlayerName = (number, name) => {\n    this.setState((prevState) => {\n      let players = prevState.players;\n      players[number] = name;\n      return { players: players };\n    });\n  };\n\n  render = () => {\n    if (!this.state.valid)\n      return (\n        <div>房間 {this.props.match.params.roomid} 不存在。 請先創建房間。</div>\n      );\n    let boardstr = \"\";\n    Object.keys(this.state.characters).forEach((k) => {\n      let number = this.state.characters[k];\n      boardstr += number > 0 ? this.state.charactersMapping[k] + number : \"\";\n    });\n    let panel = [];\n    for (let i = 0; i < 12; i += 2) {\n      panel.push(\n        <Row key={i}>\n          <PlayerPosition\n            number={i}\n            name={this.state.players[i]}\n            setPlayerName={this.setPlayerName}\n          />\n          <PlayerPosition\n            number={i + 1}\n            name={this.state.players[i + 1]}\n            setPlayerName={this.setPlayerName}\n          />\n        </Row>\n      );\n    }\n    return (\n      <Container className=\"p-3\">\n        <Jumbotron>\n          <h3 className=\"header\">\n            This is room {this.props.match.params.roomid}. We have{\" \"}\n            {this.state.numPlayers} players. Board {boardstr}.\n          </h3>\n          {panel}\n        </Jumbotron>\n      </Container>\n    );\n  };\n}\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'; \n\nimport HomePage from './Home.jsx';\nimport CreateRoom from './CreateRoom.jsx';\nimport GameRoom from './GameRoom.jsx';\n\nclass App extends React.Component{\n  constructor (props) {\n    super(props);\n    this.state = {\n      rooms: [],\n    }\n  }\n\n  render = () => {\n    return (\n      <BrowserRouter>\n        <Route exact path='/' component={HomePage} />\n        <Route path='/createroom' component={CreateRoom} />\n        <Route path='/room/:roomid' component={GameRoom}/>\n      </BrowserRouter>\n    );\n  }\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.jsx\";\n\nimport \"./index.css\"\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}