{"version":3,"sources":["components/utils.js","components/App.jsx","components/Home.jsx","components/GameRoom.jsx","components/CharacterButton.jsx","components/CreateRoom.jsx","index.js"],"names":["checkStatus","response","status","error","Error","statusText","console","log","parseJSON","json","App","useState","username","setUsername","password","setPassword","screen","setScreen","useEffect","fetch","method","then","undefined","catch","e","className","md","span","offset","Prepend","Text","aria-label","aria-describedby","name","placeholder","value","onChange","evt","target","type","onClick","headers","Headers","set","Buffer","from","toString","mode","localStorage","setItem","body","JSON","stringify","exact","path","render","component","CreateRoom","GameRoom","JoinRoom","props","onChangeRoomID","setState","roomid","size","id","state","to","pathname","disabled","React","Component","HomePage","PlayerPosition","number","setPlayerName","componentDidMount","match","params","accept","data","valid","numPlayers","characters","err","charactersMapping","prevState","players","boardstr","Object","keys","forEach","k","panel","i","push","key","Array","fill","CharacterButton","handleChange","isNaN","setCharNumber","onClickAdd","onClickDeduct","Col","InputGroup","this","Button","variant","cname","FormControl","Append","checkValid","board","parseInt","obj","sum","el","hasOwnProperty","parseFloat","validateRoom","boards","isValidRoom","onClickCreateRoom","time","res","hasResult","onClickSetBoard","character","existingBoards","map","listItems","entries","roomStr","Container","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.27d087cc.chunk.js","sourcesContent":["function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(`HTTP Error ${response.statusText}`);\n  error.status = response.statusText;\n  error.response = response;\n  console.log(error); // eslint-disable-line no-console\n  throw error;\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nexport { parseJSON, checkStatus };\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\n\nimport HomePage from \"./Home.jsx\";\nimport CreateRoom from \"./CreateRoom.jsx\";\nimport GameRoom from \"./GameRoom.jsx\";\n\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [screen, setScreen] = useState(\"auth\");\n\n  const auth = () => {\n    let headers = new Headers();\n    headers.set(\n      \"Authorization\",\n      \"Basic \" + Buffer.from(username + \":\" + password).toString(\"base64\")\n    );\n    headers.set(\"Content-Type\", \"application/json\");\n    fetch(`/authenticate`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: headers,\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.screen !== undefined) {\n          setScreen(json.screen);\n        }\n        localStorage.setItem(\"username\", username);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const register = () => {\n    fetch(`/register`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n      })\n      .catch((e) => console.error(e));\n  };\n\n  const readCookie = () => {\n    fetch(`/read-cookie`, {\n      method: \"GET\"})\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.screen !== undefined) {\n          setScreen(json.screen);\n        }\n      })\n      .catch((e) => {\n        setScreen(\"auth\");\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    readCookie();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {screen === \"auth\" ? (\n        <>\n          <Col md={{ span: 5, offset: 3 }}>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>用戶名</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                aria-label=\"Small\"\n                aria-describedby=\"inputGroup-sizing-sm\"\n                name=\"username\"\n                placeholder=\"你的名字\"\n                value={username}\n                onChange={(evt) => setUsername(evt.target.value)}\n              />\n            </InputGroup>\n          </Col>\n          <Col md={{ span: 5, offset: 3 }}>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>密碼</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                aria-label=\"Small\"\n                aria-describedby=\"inputGroup-sizing-sm\"\n                name=\"password\"\n                placeholder=\"密碼\"\n                value={password}\n                onChange={(evt) => setPassword(evt.target.value)}\n                type=\"password\"\n              />\n            </InputGroup>\n          </Col>\n          <Col md={{ span: 3, offset: 3 }}>\n            <Button onClick={auth}>登入</Button>\n            <Button onClick={register}>註冊</Button>\n          </Col>\n        </>\n      ) : (\n        <BrowserRouter>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <HomePage username={username} />}\n          />\n          <Route path=\"/createroom\" component={CreateRoom} />\n          <Route path=\"/room/:roomid\" component={GameRoom} />\n        </BrowserRouter>\n      )}\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nclass JoinRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomid: \"\",\n    };\n  }\n\n  onChangeRoomID = (evt) => {\n    this.setState({ roomid: evt.target.value });\n  };\n\n  render = () => {\n    return (\n      <div className=\"text-center\">\n        <InputGroup size=\"lg\" className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">房間ID</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            aria-label=\"Small\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            value={this.state.roomid}\n            onChange={this.onChangeRoomID}\n          />\n          <Link to={{ pathname: `/room/${this.state.roomid}` }}>\n            <Button size=\"lg\" disabled={!this.state.roomid}>\n              加入房間\n            </Button>\n          </Link>\n        </InputGroup>\n      </div>\n    );\n  };\n}\n\nconst HomePage = (props) => {\n  return (\n    <Container className=\"p-3\">\n      <Jumbotron>\n        <h1 className=\"header\">狼人殺面殺助手v1</h1>\n        <h1 className=\"header\">你好，{props.username}</h1>\n\n        <div className=\"text-center\">\n          <Link to=\"/createroom\">\n            <Button size=\"lg\">創建房間</Button>\n          </Link>\n        </div>\n        <JoinRoom />\n      </Jumbotron>\n    </Container>\n  );\n};\nexport default HomePage;\n","import React from \"react\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { parseJSON, checkStatus } from \"./utils\";\n\nfunction PlayerPosition(props) {\n  let handleChange = (evt) => {\n    const value = evt.target.value;\n    props.setPlayerName(props.number, value);\n  };\n\n  return (\n    <Col>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text>{props.number + 1}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          aria-label=\"Small\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n          value={props.name}\n          onChange={handleChange}\n        />\n      </InputGroup>\n    </Col>\n  );\n}\n\nexport default class GameRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valid: false,\n      players: Array(12).fill(\"你的名字\"),\n      numPlayers: 0,\n      characters: {},\n      charactersMapping: {},\n    };\n  }\n\n  componentDidMount = () => {\n    fetch(`/api/room?roomid=${this.props.match.params.roomid}`, {\n      method: \"GET\",\n      accept: \"application: json\",\n      mode: \"cors\",\n    })\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((data) => {\n        console.log(data);\n        this.setState({\n          valid: true,\n          numPlayers: data[\"players\"],\n          characters: data[\"characters\"],\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error \" + err);\n      });\n\n    fetch(`/api/characters`, {\n      method: \"GET\",\n      accept: \"application: json\",\n      mode: \"cors\",\n    })\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((data) => {\n        this.setState({ charactersMapping: data });\n      })\n      .catch((err) => {\n        console.log(\"Fetch character error \" + err);\n      });\n  };\n\n  setPlayerName = (number, name) => {\n    this.setState((prevState) => {\n      let players = prevState.players;\n      players[number] = name;\n      return { players: players };\n    });\n  };\n\n  render = () => {\n    if (!this.state.valid)\n      return (\n        <div>房間 {this.props.match.params.roomid} 不存在。 請先創建房間。</div>\n      );\n    let boardstr = \"\";\n    Object.keys(this.state.characters).forEach((k) => {\n      let number = this.state.characters[k];\n      boardstr += number > 0 ? this.state.charactersMapping[k] + number : \"\";\n    });\n    let panel = [];\n    for (let i = 0; i < 12; i += 2) {\n      panel.push(\n        <Row key={i}>\n          <PlayerPosition\n            number={i}\n            name={this.state.players[i]}\n            setPlayerName={this.setPlayerName}\n          />\n          <PlayerPosition\n            number={i + 1}\n            name={this.state.players[i + 1]}\n            setPlayerName={this.setPlayerName}\n          />\n        </Row>\n      );\n    }\n    return (\n      <Container className=\"p-3\">\n        <Jumbotron>\n          <Row>\n            <Col>\n              房間ID: {this.props.match.params.roomid}\n            </Col>\n            <Col>\n              版子\b: {boardstr}.\n            </Col>\n          </Row>\n          {panel}\n        </Jumbotron>\n      </Container>\n    );\n  };\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class CharacterButton extends React.Component {\n  handleChange = (evt) => {\n    const value = evt.target.value;\n    if (!isNaN(value) && value > 0) {\n      this.props.setCharNumber(this.props.name, value);\n    }\n  };\n\n  onClickAdd = () => {\n    this.props.setCharNumber(this.props.name, this.props.number + 1);\n  };\n\n  onClickDeduct = () => {\n    this.props.setCharNumber(this.props.name, this.props.number - 1);\n  };\n\n  render() {\n    return (\n      <Col md={{ span: 3, offset: 4 }}>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            {this.props.number > 0 ? (\n              <Button disabled={true} variant=\"secondary\">{this.props.cname}</Button>\n            ) : (\n              <Button disabled={true} variant=\"outline-secondary\">\n                {this.props.cname}\n              </Button>\n            )}\n            <Button onClick={this.onClickDeduct} disabled={this.props.number === 0}> - </Button>\n          </InputGroup.Prepend>\n          <FormControl\n            aria-label=\"Small\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            type=\"number\"\n            value={this.props.number}\n            onChange={this.handleChange}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.onClickAdd}> + </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Col>\n    );\n  }\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\n\nimport CharacterButton from \"./CharacterButton.jsx\";\nimport { parseJSON, checkStatus } from \"./utils\";\n\nfunction sum(obj) {\n  var sum = 0;\n  for (var el in obj) {\n    if (obj.hasOwnProperty(el)) {\n      sum += parseFloat(obj[el]);\n    }\n  }\n  return sum;\n}\n\nfunction checkValid(characters, board) {\n  for (const key in characters) {\n    if (key in board) {\n      if (characters[key] !== board[key]) {\n        return false;\n      }\n    } else if (characters[key] !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default class CreateRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValidRoom: false, // if current setup is valid or not\n      roomid: \"\",\n      time: 120,\n      players: 0,\n      characters: {},\n      charactersMapping: {},\n      boards: {},\n      hasResult: false, // if the result is returned or not\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/api/characters`, {\n      method: \"GET\",\n      accept: \"application: json\",\n      mode: \"cors\",\n    })\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((data) => {\n        let characters = {};\n        Object.keys(data).forEach((key) => {\n          characters[key] = 0;\n        });\n        this.setState({ characters: characters, charactersMapping: data });\n      })\n      .catch((err) => {\n        console.log(\"Fetch character error \" + err);\n      });\n\n    fetch(`/api/boards`, {\n      method: \"GET\",\n      accept: \"application: json\",\n      mode: \"cors\",\n    })\n      .then(checkStatus)\n      .then(parseJSON)\n      .then((data) => {\n        this.setState({ boards: data });\n      })\n      .catch((err) => {\n        console.log(\"Fetch character error \" + err);\n      });\n  }\n\n  setCharNumber = (name, value) => {\n    this.setState(\n      (prevState) => {\n        let characters = prevState.characters;\n        characters[name] = parseInt(value);\n        const players = sum(characters);\n        return { characters: characters, players: players };\n      },\n      () => this.validateRoom()\n    );\n  };\n\n  validateRoom = () => {\n    for (const key in this.state.boards) {\n      if (checkValid(this.state.characters, this.state.boards[key])) {\n        this.setState({ isValidRoom: true });\n        console.log(\"Found equal room!\");\n        break;\n      }\n    }\n  };\n\n  onClickCreateRoom = () => {\n    fetch(`/api/room`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      mode: \"cors\",\n      body: JSON.stringify({\n        time: this.state.time,\n        players: this.state.players,\n        characters: this.state.characters,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        this.setState({\n          hasResult: true,\n          roomid: data[\"roomid\"],\n        });\n      })\n      .catch((err) => {\n        console.err(err);\n      });\n  };\n\n  onClickSetBoard = (key) => {\n    const board = this.state.boards[key];\n    let characters = this.state.characters;\n    let players = 0;\n    for (const character in characters) {\n      if (character in board) {\n        characters[character] = board[character];\n        players += parseInt(board[character]);\n      } else {\n        characters[character] = 0;\n      }\n    }\n    this.setState({\n      characters: characters,\n      isValidRoom: true,\n      players: players,\n    });\n  };\n\n  render = () => {\n    let existingBoards = Object.keys(this.state.boards).map((key) => (\n      <Button\n        key={key}\n        className=\"mr-1 mb-1\"\n        size=\"md\"\n        variant=\"outline-info\"\n        onClick={() => {\n          this.onClickSetBoard(key);\n        }}\n      >\n        {key}\n      </Button>\n    ));\n    let listItems = Object.entries(\n      this.state.charactersMapping\n    ).map(([key, value], i) => (\n      <CharacterButton\n        key={i}\n        cname={value}\n        name={key}\n        number={this.state.characters[key]}\n        setCharNumber={this.setCharNumber}\n      />\n    ));\n    let roomStr = \"/room/\" + this.state.roomid;\n    return (\n      <Container className=\"p-3\">\n        <div className=\"text-center\">\n          {existingBoards}\n          {listItems}\n          <Button\n            size=\"lg\"\n            disabled={!this.state.isValidRoom}\n            onClick={this.onClickCreateRoom}\n          >\n            創造房間\n          </Button>\n          {this.state.isValidRoom ? null : <div>房間不符合已存在的板子。</div>}\n          {this.state.hasResult ? (\n            <Link to={roomStr}>\n              <Button size=\"lg\">進入房間 {this.state.roomid} </Button>\n            </Link>\n          ) : null}\n        </div>\n      </Container>\n    );\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.jsx\";\n\nimport \"./index.css\"\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}